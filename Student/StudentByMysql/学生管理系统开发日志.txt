这个项目是基于mysql的学生管理系统
--2018-7-29--
开始都在一个模板中开发，后面发现随着代码的增多，管理变得原来越难，
所以就就先把menu菜单分离出来，成为一个新的模块menu.py，后面就
算有新的，menu需要开发，也加入到这个模块中，这样主程序会变得轻
便很多，说干就干。
--2018-7-29--verson 3.1
将数据库的操作函数连接、增、删、改、查封装到新模块Db.py
--2018-7-29--verson 3.2
    较上一个版本，这个版本又有了新功能，用户登陆和管理员
登入，并提供了登陆验证，其中管理员没有在数据库中创建admin
表，所以没有注册功能。而学生在数据库中创建了user表，所以提
供了注册功能，但没有提供验重功能，用户名重了后期可能会出现
bug，登陆的是第一个在验证功能中，在表里查到的帐号。
    user表和stu表是一对一的关系，可以关联这两个表。
    新增了四个页面。登陆页面、注册页面、主程序页面，学生页
面，虽然美化了一下，但输出不好看，后面可能重构时会再次修改
一下。
--2018-7-29--verson 3.3
    这个版本实现了学生主页页面的个人信息页面的查改，但因为
表格设计有缺陷和对mysql表关系不是很熟悉，卡了蛮多会的，emm
总之是解决了，还处理了一些细节方面的问题。下个版本预计实现学
生选课，会关系到表多对多之间的关系。恩，发现写这个主要是练习
我的数据库方面的知识啊，python的特性方面啥的都用不到，但是
python写的较别的语言写起来更简洁。但是性能方面，有待考虑啊，
每次测试后修改代码后再重新运行，第一次运行都会有点卡顿，得从
代码方面优化啊！！！
--2018-7-30--verson 3.4.1
    学生选课已经完成，def show_chose_course()，但是有
个bug没有修复，就是查询结果查出来的不是个人自己选的课而是所
有人选课的结果，是sql语句的问题，还有有些之前建立的学生用户
无法选课，缺少向后兼容，记录一下。因为明早还有事，只能先到这
了。
--2018-7-30--version3.4.2
    start：14:14
    优化查询结果的输出，以及解决查询出来不是登陆学生选择的课
程的问题。
    1.修改了change_stu（）修改学生信息时学号对客户可见。
    2. 添加了get_key(user, key)函数，用于获取user_和
student_表中key类型的信息。
    3.添加了个人选课查询表格和管理员模块那个显示已经注册
学生的表格
    end : 16:00
--2018-7-30-- version3.4.3(3系列最终版)
    本来就是为了练习python写的项目，到现在已经基本实现了的
所有原定开发的功能，个人觉得没有再继续开发，继续添加功能的必
要了。目前系统能实现以下功能：
1.程序主页面：
++++++++++++++++++++++++++++++++++++++++
+        欢迎使用学生管理系统3.0          +
++++++++++++++++++++++++++++++++++++++++
+         1.学生登入                    +
+         2.管理员登入                  +
+         3.学生注册                    +
+         4.退出系统                    +
++++++++++++++++++++++++++++++++++++++++
+         2018-07-30 22:58:51          +
++++++++++++++++++++++++++++++++++++++++

2.学生主页面：
########################################
#              学生页面                #
########################################
#         1.个人信息                    #
#         2.选   课                    # 
#         3.查看选课                    #
#         4.查看成绩                    #
#         5.退出系统                    #
########################################
#         2018-07-30 22:58:46          #
########################################

2.1学生子页面之个人信息页面
########################################
#        学生个人信息页面                #
########################################
#         1.查看个人信息                #
#         2.修改个人信息                #
#         3.退出系统                   #
########################################

2.2学生子页面之选课页面
+++++++++++++++++++++++++++++
|课程号|  课程名   |课程状态|
+++++++++++++++++++++++++++++
|  1   | Python    |　开　　|
|  2   | Java      |　开　　|
|  3   | Mysql     |　不开　|
|  5   | C#        |　不开　|
|  6   | javascript|　开　　|
|  7   | ruby      |　开　　|
+++++++++++++++++++++++++++++
你好，python！请选择你想要上课的课程号：

另外两个两个打印出自己所选课程和成绩
+++++++++++++++++++++++++
|课程号|  课程名   |分数|
+++++++++++++++++++++++++
|  1   | Python    | 55 |
|  2   | Java      | 66 |
|  3   | Mysql     | 77 |
|  5   | C#        | 88 |
|  6   | javascript| 0  |
|  7   | ruby      | 99 |
+++++++++++++++++++++++++

3.管理员页面  用户名：admin 密码：root
+++++++++++++++++++++++++++++++++++++++++++++++
+            学生管理系统2.0(mysql版本)       +
+++++++++++++++++++++++++++++++++++++++++++++++
+         1.管理学生                      +
+         2.查看学生                      +
+         3.课程管理                      +
+         4.选课情况                      +
+         5.打分程序                      +
+         6.查看学生                      +
+         7.退出系统                      +
+++++++++++++++++++++++++++++++++++++++++++++++
+             2018-07-30 23:14:26             +
+++++++++++++++++++++++++++++++++++++++++++++++

3.1子页面 
++++++++++++++++++++++++++++
+       学生管理界面       +
++++++++++++++++++++++++++++
|1.增加学生                |
|2.删除学生                |
|3.修改学生                |
|4.退出学生管理界面　　　　|
++++++++++++++++++++++++++++

3.2
++++++++++++++++++++++++++++
+       学生查询界面       +
++++++++++++++++++++++++++++
|1.按学号查询              |
|2.按姓名查询              |
|3.打印所有学生            |
|4.退出查询页面　　　　　　      |
++++++++++++++++++++++++++++
|        功能待拓展        |
++++++++++++++++++++++++++++

3.3
++++++++++++++++++++++++++++
+       课程管理界面       +
++++++++++++++++++++++++++++
|1.查看课程                |
|2.添加课程                |
|3.删除课程                |
|4.修改课程                |
|5.退出课程管理界面　　　　      |
++++++++++++++++++++++++++++

3.4
选课情况如下：
+++++++++++++++++++++++++++++++++++++
|   学号   |   姓名   |课程名|课程状态|
+++++++++++++++++++++++++++++++++++++
|151310108 |诸葛亮　　|C#    |不开　|
|151310108 |诸葛亮　　|Java  |开　　|
|151310108 |诸葛亮　　|Mysql |不开　|
|151310108 |诸葛亮　　|Python|开　　|
|151310123 |礼拜　　　|Java  |开　　|
|151310123 |礼拜　　　|Mysql |不开　|
|151310123 |礼拜　　　|Python|开　　|
|151310188 |司马相如　|C#    |不开　|
|151310188 |司马相如　|Mysql |不开　|
|151310188 |司马相如　|Python|开　　|
|151310222 |李逵　　　|C#    |不开　|
|151310222 |李逵　　　|Java  |开　　|
|151310222 |李逵　　　|Mysql |不开　|
|151310222 |李逵　　　|Python|开　　|
|151310222 |李逵　　　|javascript|开　　|
|151310222 |李逵　　　|ruby  |开　　|
|151310234 |张君宝　　|Python|开　　|
+++++++++++++++++++++++++++++++++++++

3.5.
+++++++++++++++++++++++++++++++++++++
|   学号   |   姓名   |课程名|课程状态|
+++++++++++++++++++++++++++++++++++++
|151310108 |诸葛亮　　|C#    |不开　|
|151310108 |诸葛亮　　|Java  |开　　|
|151310108 |诸葛亮　　|Mysql |不开　|
|151310108 |诸葛亮　　|Python|开　　|
+++++++++++++++++++++++++++++++++++++
输入你想打分的学生学号：


3.6. 打印已经注册的学生
注册学生情况如下：
++++++++++++++++++++++++++++
|编号|   姓名   |   密码   |
++++++++++++++++++++++++++++
| 1  |151310107 |151310107 |
| 2  |python    |python    |
| 3  |mysql     |mysql     |
| 4  |java      |java      |
| 5  |ruby      |ruby      |
| 6  |c++       |c++       |
++++++++++++++++++++++++++++

    以上这些功能基本能实现，除非你输入一些及其特殊的数据，
不然正常情况系统都不会崩溃（虽然看上去没什么，但是如果每个
地方，细节都得添加验证的话，那会发费大量的时间，毕竟是为了
练手，如果真的这个没有实际作用的项目花很多时间，emm个人觉
得不可取。）所以虽然这个已经是我的这个项目的最终版本，但是
程序的健壮性有待提高。

    总之两天时间，零零散散的，还是写完了这个小项目，几个
问题总结以下：因为数据库是边添加功能边设计的，有缺陷，导致
后面有些功能实现起来本来很简单，却变得很繁琐，得出个结论，
磨刀不误砍柴工，功能需求先设计好，检查可行性再着手去开发。
另外，代码写的比较乱，不符合pythonic，还是写的少啊！！！
还有就是日志很重要很重要！！！帮助我解决了不少问题！！！
最后就是尽量广涉猎，多学习，这样面对需求时就能有更多的解决
方法了。好了，觉得没啥好比比的，就是自己记录一下。
                        ---2018-07-30--- 23:33